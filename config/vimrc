if &compatible
    " vint: -ProhibitSetNoCompatible
    set nocompatible
    " vint: +ProhibitSetNoCompatible
endif

" Set main configuration directory as parent directory
let $VIM_PATH = fnamemodify(resolve(expand('<sfile>:p')), ':h:h')

" Regular Vim doesn't add custom configuration directories, if you use one
if &runtimepath !~# $VIM_PATH
    set runtimepath^=$VIM_PATH
endif

let $DATA_PATH = g:etc#cache_path


augroup MyAutoCmd
    autocmd!
    autocmd CursorHold *? syntax sync minlines=300
augroup END

" Disable vim distribution plugins
let g:loaded_getscript = 1
let g:loaded_getscriptPlugin = 1
let g:loaded_gzip = 1
let g:loaded_logiPat = 1
let g:loaded_matchit = 1
let g:loaded_matchparen = 1
let g:netrw_nogx = 1 " disable netrw's gx mapping.
let g:loaded_rrhelper = 1  " ?
let g:loaded_shada_plugin = 1  " ?
let g:loaded_tar = 1
let g:loaded_tarPlugin = 1
let g:loaded_tutor_mode_plugin = 1
let g:loaded_2html_plugin = 1
let g:loaded_vimball = 1
let g:loaded_vimballPlugin = 1
let g:loaded_zip = 1
let g:loaded_zipPlugin = 1

" Initialize base requirements
if has('vim_starting')
    " Global Mappings "{{{
    " Use spacebar as leader and ; as secondary-leader
    " Required before loading plugins!
    let g:mapleader="\<Space>"
    let g:maplocalleader=';'

    " Release keymappings prefixes, evict entirely for use of plug-ins.
    nnoremap <Space>  <Nop>
    xnoremap <Space>  <Nop>
    nnoremap ,        <Nop>
    xnoremap ,        <Nop>
    nnoremap ;        <Nop>
    xnoremap ;        <Nop>

   if ! has('nvim') && has('pythonx')
        if has('python3')
            set pyxversion=3
        elseif has('python')
            set pyxversion=2
        endif
    endif


    " Ensure data directories
    call etc#util#ensure_directory([
        \   g:etc#cache_path . '/undo',
        \   g:etc#cache_path . '/backup',
        \   g:etc#cache_path . '/session',
        \   g:etc#vim_path . '/spell'
        \ ])

endif

call etc#init()
call etc#util#source_file('config/plugins/all.vim')
call etc#util#source_file('config/basic/general.vim')
call etc#util#source_file('config/basic/filetype.vim')
call etc#util#source_file('config/basic/mappings.vim')

" Initialize user favorite colorscheme
call theme#init()
call etc#util#source_file('config/basic/color.vim')

function! s:check_custom_settings(filename)abort
    let  content = readfile(a:filename)
    if empty(content)
        return 0
    endif
    return 1
endfunction

set secure

" vim: set ts=2 sw=2 tw=80 noet :
