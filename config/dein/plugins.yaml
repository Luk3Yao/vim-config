# why use yaml to manage plugins
# see http://genkisugimoto.com/blog/manage-vim-plugins-via-yaml/

# StartUp
# ===============
- repo: Shougo/dein.vim
- repo: wsdjeg/dein-ui.vim
- repo: oneTOinf/spaceline.vim
  hook_add: let g:spaceline_seperate_style= 'none'
- repo: bagrat/vim-buffet
  hook_add: source $VIM_PATH/config/plugins/buffet.vim

# Language
# ========
- { repo: honza/dockerfile.vim, on_ft: Dockerfile }
- { repo: junegunn/vim-emoji, on_ft: [markdown,vim] }

- { repo: leafgarland/typescript-vim, on_ft: [typescript.tsx,typescript] }
- { repo: peitalin/vim-jsx-typescript, on_ft: [typescript.tsx]}

- { repo: Vimjas/vim-python-pep8-indent, on_ft: python }
- { repo: tmhedberg/SimpylFold, on_ft: python }
- { repo: vim-scripts/python_match.vim, on_ft: python }
- repo: vim-python/python-syntax
  on_ft: python
  hook_add: let g:python_highlight_all = 1

- { repo: neoclide/vim-jsx-improve, on_ft: [javascript,jsx,javascript.jsx]}

- { repo: cespare/vim-toml, on_ft: toml }
- { repo: vim-scripts/xml.vim, on_ft: xml}
- { repo: pearofducks/ansible-vim, on_ft: [ yaml.ansible, ansible_hosts ]}

- repo: elzr/vim-json
  on_ft: json
  hook_add: let g:vim_json_syntax_conceal = 0

- repo: fatih/vim-go
  on_ft: go
  hook_source: source  $VIM_PATH/config/plugins/vim-go.vim

- repo: godlygeek/tabular
  on_ft: markdown
- repo: plasticboy/vim-markdown
  depends: tabular
  on_ft: markdown
  hook_source: source  $VIM_PATH/config/plugins/vim-markdown.vim

# Commands
# =========
- repo: Shougo/defx.nvim
  on_cmd: Defx
  hook_source: source  $VIM_PATH/config/plugins/defx.vim

- repo: kristijanhusak/defx-git
  on_source: defx.nvim
  hook_source: source  $VIM_PATH/config/plugins/defx-git.vim

- repo: kristijanhusak/defx-icons
  on_source: defx.nvim

- repo: junegunn/fzf
  build: './install --all'
  merged: 0

- repo: junegunn/fzf.vim
  depends: fzf
  on_cmd: [Colors,Rg,Buffers]
  on_func: Fzf_dev
  hook_source: source  $VIM_PATH/config/plugins/fzf.vim

- { repo: lambdalisue/gina.vim, on_cmd: Gina }

- repo: chemzqm/vim-easygit
  on_cmd: [Gcd, Glcd, Gcommit, Gblame, Gstatus, Gdiff, Gbrowse, Gstatus, Gpush]
  hook_source: let g:easygit_enable_command = 1

- repo: iamcco/markdown-preview.nvim
  on_ft: [markdown,pandoc.markdown,rmd]
  build: cd app & yarn install
  hook_add: |
    let g:mkdp_auto_close = 0

- repo: junegunn/goyo.vim
  on_cmd: Goyo
  hook_source: source  $VIM_PATH/config/plugins/goyo.vim

- repo: junegunn/Limelight.vim
  on_cmd: Limelight

- repo: majutsushi/tagbar
  on_cmd: TagbarToggle
  hook_source: |
    let g:tagbar_width = 40
    if executable('jsctags')
      let g:tagbar_type_javiascript = { 'ctagsbin': 'jsctags' }
    endif

- repo: 'lvht/tagbar-markdown'
  on_ft: markdown
  on_cmd: [TagbarToggle]

# Interface
# ==========
- repo: ryanoasis/vim-devicons
  hook_add: let g:webdevicons_enable_denite = 1

- { repo: rhysd/accelerated-jk, on_map: { n: <Plug> } }

- repo: ludovicchabant/vim-gutentags
  if: executable('ctags')
  on_path: .*
  hook_add: source  $VIM_PATH/config/plugins/vim-gutentags.vim

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_source: source  $VIM_PATH/config/plugins/vim-choosewin.vim

- repo: kizza/actionmenu.nvim
  on_path: .*

- repo: junegunn/vim-easy-align
  on_ft: [vim,json,go,html,js,jsx,py,css,less,tmpl,toml,xml,sql,Dockerfile]


- repo: yuttie/comfortable-motion.vim
  on_func: comfortable_motion#flick
  hook_add: |
        let g:comfortable_motion_no_default_key_mappings = 1
        let g:comfortable_motion_impulse_multiplier = 1
- repo: rizzatti/dash.vim
  on_map: { n: <Plug> }
  hook_add: |
      let g:dash_map = {
        \ 'javascript': ['javascript', 'NodeJS'],
        \ 'javascript.jsx': ['react'],
        \ 'html': ['html', 'svg'],
        \ 'go' : 'Go',
        \}
- repo: thinca/vim-quickrun
  on_cmd: QuickRun
  hook_add: |
        let g:quickrun_config = {
            \   "_" : {
            \       "outputter" : "message",
            \   },
            \}
        let g:quickrun_no_default_key_mappings = 1
- {repo: simnalamburt/vim-mundo , on_map: { n: <Plug> } }

- {repo: tpope/vim-repeat , on_map: .* }

- repo: liuchengxu/vim-which-key
  on_cmd: [Whichkey, Whichkey!]
  hook_source: source  $VIM_PATH/config/plugins/whichkey.vim
  hook_post_source: |
        call which_key#register('<Space>', 'g:which_key_map')
        call which_key#register(';', 'g:which_key_localmap')
        call which_key#register(']', 'g:which_key_rsbgmap')
        call which_key#register('[', 'g:which_key_lsbgmap')
- repo: easymotion/vim-easymotion
  on_map: { n: <Plug> }
  hook_source: |
        let g:EasyMotion_do_mapping = 0
        let g:EasyMotion_prompt = 'Jump to â†’ '
        let g:EasyMotion_keys = 'fjdkswbeoavn'
        let g:EasyMotion_smartcase = 1
        let g:EasyMotion_use_smartsign_us = 1

- { repo: rafi/vim-sidemenu, on_map: { nv: <Plug> }}
# Completion
# ==========
- repo: neoclide/coc.nvim
  merge: 0
  rev: release
  hook_add: source  $VIM_PATH/config/plugins/coc.vim
- repo: honza/vim-snippets
  on_ft: [vim,go,javascript.jsx,javascript,js,jsx,typescript,tsx,ts,python,html,css,cpp,rust,php,c]

# Denite
# ======
- repo: Shougo/denite.nvim
  on_cmd: Denite
  depends: vim-devicons
  hook_source: |
        source  $VIM_PATH/config/plugins/denite.vim
        source  $VIM_PATH/config/plugins/denite-menu.vim

# Operators & Text objects
# ==========================================
- repo: tyru/caw.vim
  on_map: { nx: <Plug> }

- repo: sbdchd/neoformat
  on_cmd: [Neoformat,Neoformat!]
  hook_source: source  $VIM_PATH/config/plugins/neoformat.vim

- repo: Yggdroot/indentLine
  on_ft: [python,html,css,vim,javascript,jsx,javascript.jsx,vue]
  hook_source: source $VIM_PATH/config/plugins/indentline.vim

- repo: liuchengxu/vista.vim
  on_cmd: [Vista,Vista!,Vista!!]
  hook_source: source  $VIM_PATH/config/plugins/vista.vim


- repo: mattn/emmet-vim
  on_ft: [html,css,jsx,javascript,javascript.jsx]
  on_event: InsertEnter
  hook_add: |
        let g:use_emmet_complete_tag = 0
        let g:user_emmet_install_global = 0
        let g:user_emmet_install_command = 0
        let g:user_emmet_mode = 'i'
        let g:user_emmet_leader_key='<C-g>'
        let g:user_emmet_settings = {
            \  'javascript.jsx' : {
            \      'extends' : 'jsx',
            \  },
        \}
- repo: luochen1990/rainbow
  on_ft: [python,javascript,jsx,javascript.jsx,html,css,go,vim,toml]
  hook_source: let g:rainbow_active = 1

- repo: Shougo/echodoc.vim
  on_event: CompleteDone
  hook_source: |
        call echodoc#enable()
        let g:echodoc#type = "virtual"

- { repo: AndrewRadev/splitjoin.vim, on_map: { n: <Plug>Splitjoin }}
- { repo: terryma/vim-expand-region, on_map: { x: <Plug> }}
- { repo: kana/vim-textobj-user, on_func: textobj#user# }
- { repo: kana/vim-operator-user, lazy: 1 }
- { repo: kana/vim-niceblock, on_map: { x: <Plug> }}

- repo: kana/vim-smartchr
  on_event: InsertCharPre

- repo: kana/vim-operator-replace
  depends: vim-operator-user
  on_map: { vnx: <Plug> }

- repo: machakann/vim-sandwich
  on_map: { vnx: [<Plug>(operator-sandwich-,<Plug>(textobj-sandwich-]}

- repo: osyo-manga/vim-textobj-multiblock
  depends: vim-textobj-user
  on_map: { ox: <Plug> }
  hook_add:  let g:textobj_multiblock_no_default_key_mappings = 1

