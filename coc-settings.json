{
    "suggest.triggerAfterInsertEnter": true,
    "suggest.timeout": 500,
    "suggest.noselect": false,
    "suggest.detailField":"abbr",
    "suggest.snippetIndicator": "üåü",
    "suggest.triggerCompletionWait": 100,
    "suggest.echodocSupport": true,
    "suggest.completionItemKindLabels": {
        "keyword": "\uf1de",
        "variable": "\ue79b",
        "value": "\uf89f",
        "operator": "\u03a8",
        "function": "\u2A15",
        "reference": "\ufa46",
        "constant": "\uf8fe",
        "method": "\uf09a",
        "struct": "\ufb44",
        "class": "\uf0e8",
        "interface": "\uf417",
        "text": "\u2663",
        "enum": "\uf435",
        "enumMember": "\uf02b",
        "module": "\uf530",
        "color": "\ue22b",
        "property": "\ue624",
        "field": "\uf6a6",
        "unit": "\uf475",
        "event": "\ufacd",
        "file": "\uf723",
        "folder": "\uf114",
        "snippet": "\ue60b",
        "typeParameter": "\uf728", "default": "\uf29c"
    },
    //diagnostic
    "diagnostic.signOffset": 9999999,
	"diagnostic.errorSign": "‚óè",
	"diagnostic.warningSign": "‚óè",
    "diagnostic.displayByAle": false,
    "diagnostic.refreshOnInsertMode": true,
    //git
    "git.enableGutters": true,
    "git.branchCharacter":"\uf408",
    "git.addGlameToBufferVar": true,
    "git.addGlameToVirtualText": true,
    "git.virtualTextPrefix": " ‚ùØ‚ùØ‚ùØ ",
    "git.addedSign.hlGroup": "GitGutterAdd",
    "git.changedSign.hlGroup": "GitGutterChange",
    "git.removedSign.hlGroup": "GitGutterDelete",
    "git.topRemovedSign.hlGroup": "GitGutterDelete",
    "git.changeRemovedSign.hlGroup": "GitGutterChangeDelete",
    "git.addedSign.text":"‚ñé",
    "git.changedSign.text":"‚ñé",
    "git.removedSign.text":"‚ñè",
    "git.topRemovedSign.text": "‚ñî",
    "git.changeRemovedSign.text": "‚ñã",
    //Snippet
    "coc.preferences.snippetStatusText": "‚ìà ",
    //CocList
    "list.source.files.defaultOptions": ["--auto-preview"],
    "list.source.outline.defaultOptions": ["--auto-preview"],
    //prettier
    "coc.preferences.formatOnSaveFiletypes": ["css","markdown"],
    "prettier.statusItemText": "‚ìü ",
    "prettier.eslintIntegration": true,
    "prettier.tslintIntegration": true,
    "prettier.stylelintIntegration": true,
    //emmet
    "emmet.includeLanguages": {"vue-html": "html", "javascript": "javascriptreact"},
    //imselect
    "imselect.enableStatusItem": false,
    //multiple curssors
    "cursors.nextKey": "<C-n>",
    "cursors.previousKey": "<C-p>",
    "cursors.cancelKey": "<esc>",
    // coc-explorer
    "explorer.icon.expanded": "‚ñæ",
    "explorer.icon.shrinked": "‚ñ∏",
    "explorer.icon.enableNerdfont": true,
    "explorer.keyMappings": {
        "l" : "expandOrShrink"
    },
    //python
    "python.autoComplete.addBrackets": true,
    // eslint
    "eslint.filetypes": ["javascript", "javascript.jsx", "javascriptreact"],
    "eslint.autoFix": true,
    "eslint.autoFixOnSave": true,
    //vimlsp
    "vimlsp.debug": {
        "type": "boolean",
        "default": false,
        "description": "enable coc-vimlsp service debug"
    },
    "vimlsp.diagnostic.enable": {
        "type": "boolean",
        "default": true,
        "description": "enable diagnostic"
    },
    "vimlsp.indexes.runtimepath": {
        "type": "boolean",
        "default": true,
        "description": "if index vim's runtimepath files, this will effect the suggest"
    },
    "vimlsp.indexes.count": {
        "type": "number",
        "default": 3,
        "description": "count of files index at the same time, change to greater will speed up index but will cause high CPU usage for some time"
    },
    "vimlsp.indexes.gap": {
        "type": "number",
        "default": 100,
        "description": "time gap between parse file, change to smaller will speed up index but will cause high CPU usage for some time"
    },
    "vimlsp.suggest.fromVimruntime": {
        "type": "boolean",
        "default": true,
        "description": "completeitems from vimruntime's vim files"
    },
    "vimlsp.suggest.fromRuntimepath": {
        "type": "boolean",
        "default": false,
        "description": "completeitems from runtimepath's vim files, if this is true that fromVimruntime is true"
    },
    "vimlsp.trace.server": {
        "type": "string",
        "default": "off",
        "enum": [
            "off",
            "messages",
            "verbose"
        ],
        "description": "Trace level of vim language server"
    },
    //golang
    "languageserver": {
      // "golang": {
      //   "command": "gopls",
      //   "rootPatterns": ["go.mod"],
      //   "filetypes": ["go"]
      // }
      "golang": {
        "command": "go-langserver",
        "filetypes": ["go"],
        "initializationOptions": {
            "gocodeCompletionEnabled": true,
            "diagnosticsEnabled": true,
            "lintTool": "golint"
            }
        }
    }
}
